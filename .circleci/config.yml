---
version: 2

workflows:
  version: 2
  build_linux:
    jobs:
      - build

jobs:
  build:
    working_directory: ~/work
    #machine:
    #  image: circleci/classic:latest
    docker:
      - image: ubuntu:20.04

    steps:
      - run: &apt_install
          apt update &&
          export DEBIAN_FRONTEND=noninteractive ; apt install -y --no-install-recommends
            cmake
            gcc
            libconfig-dev
            libgtest-dev
            ninja-build
            pkg-config
            zip grep file ca-certificates autotools-dev autoconf automake
            git bc wget rsync cmake make pkg-config libtool
            ssh gzip tar unzip
            coreutils

      - checkout
      #- restore_cache:
      #    key: ctc-library-dependencies-v2-{{ .Branch }}

      - run: mkdir -p ~/work/deploy
      - run: if [ -e build_dir ]; then export oo="cache" ; else export oo="" ; fi ; mkdir -p build_dir ; cd build_dir ; pwd ; ls -al ; bash ../circle_scripts/deps.sh "$oo"

      - run: &apt_install
          export DEBIAN_FRONTEND=noninteractive ; apt install -y --no-install-recommends clang
      - run: dpkg -l | grep clang
      - run: type -a clang
      - run: clang --version


      - run: cd build_dir ; bash ../circle_scripts/toxproxy.sh '../'

      #- save_cache:
      #    paths: [ "~/work/build_dir" ]
      #    key: ctc-library-dependencies-v2-{{ .Branch }}


      - store_artifacts:
          path: ~/work/artefacts
          destination: artefacts
